<!DOCTYPE html>
<html>
  <head>
    <title>Game</title>
    <style>
      body {
        background-color: rgb(25, 25, 25);
        color: white;
        font-family: 'Arial';
      }
      .title {
        font-size: 30px;
        font-weight: bold;
      }
      .js-result {
        font-size: 20px;
        font-weight: bold;
      }
      .image-style {
        height: 100px;
        width: 100px;
      }
      .button-style {
        border-radius: 90px;
        margin-right: 10px;
        background-color: transparent;
        border-width: 3px;
        border-style: solid;
        border-color: white;
        padding: 20px;
      }
      .reset{
        width:100px;
        height:30px;
      }
    </style>
  </head>
  <body>
    <p class="title">Rock Paper Scissors</p>

    <button class="button-style" onclick="gameResult('Rock')">
      <img class="image-style" src="rock-emoji.png">
    </button>
    <button class="button-style" onclick="gameResult('Paper')">
      <img class="image-style" src="paper-emoji.png">
    </button>
    <button class="button-style" onclick="gameResult('Scissors')">
      <img class="image-style" src="scissors-emoji.png">
    </button>

    <p class="js-result"></p>
    <p class="js-score"></p>
    <p class="js-moves" ></p>

    <script>
      let result = '';
      let computerMove = '';
      let playerMove = '';

      let score = JSON.parse(localStorage.getItem('score')) || {
        Wins: 0,
        Loss: 0,
        Tie: 0
      };

      function updateScore() {
        document.querySelector('.js-score').innerHTML =
          `Wins: ${score.Wins} &nbsp; Losses: ${score.Loss} &nbsp; Ties: ${score.Tie}`;
      }

      function updateResult() {
        document.querySelector('.js-result').innerHTML = result;
      }

     
      function updateMoves() {
        document.querySelector('.js-moves').innerHTML = `
          <img class="image-style" src="${playerMove.toLowerCase()}-emoji.png">
          <span style="margin: 0 10px;">vs</span>
          <img class="image-style" src="${computerMove.toLowerCase()}-emoji.png">
        `;
      }

      function pickMove() {
        const randomNumber = Math.random();
        if (randomNumber < 1 / 3) {
          return 'Rock';
        } else if (randomNumber < 2 / 3) {
          return 'Paper';
        } else {
          return 'Scissors';
        }
      }

      function savescore() {
        localStorage.setItem("score", JSON.stringify(score));
      }

      function gameMove(playerMove, computerMove) {
        if (computerMove === 'Rock') {
          if (playerMove === 'Rock') {
            score.Tie++;
            return 'Tie';
          } else if (playerMove === 'Paper') {
            score.Wins++;
            return 'You Win';
          } else {
            score.Loss++;
            return 'You Lose';
          }
        } else if (computerMove === 'Paper') {
          if (playerMove === 'Rock') {
            score.Loss++;
            return 'You Lose';
          } else if (playerMove === 'Paper') {
            score.Tie++;
            return 'Tie';
          } else {
            score.Wins++;
            return 'You Win';
          }
        } else {
          if (playerMove === 'Rock') {
            score.Wins++;
            return 'You Win';
          } else if (playerMove === 'Paper') {
            score.Loss++;
            return 'You Lose';
          } else {
            score.Tie++;
            return 'Tie';
          }
        }
      }

      function resetScore() {
        score.Wins = 0;
        score.Loss = 0;
        score.Tie = 0;
        localStorage.removeItem('score');
        console.log("Score reset to 0.");
        updateScore();
      }

      function gameResult(move) {
        playerMove = move;
        computerMove = pickMove();
        result = gameMove(playerMove, computerMove);

        updateResult();
        updateMoves();
        savescore();
        updateScore();

        console.log(`You: ${playerMove}  Computer: ${computerMove}`);
        console.log(`Result: ${result}`);
        console.log(`Wins: ${score.Wins}, Losses: ${score.Loss}, Ties: ${score.Tie}`);
      }

      // Show score on first load
      updateScore();
    </script>

    <button class="reset" onclick="resetScore()">Reset Score</button>
  </body>
</html>
